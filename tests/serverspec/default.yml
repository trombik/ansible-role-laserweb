---
- hosts: localhost
  roles:
    - role: trombik.apt_repo
    - role: trombik.git
    - role: trombik.nodejs
    - role: ansible-role-laserweb
    - role: trombik.nginx
  vars:
    # see https://deb.nodesource.com/setup_10.x
    apt_repo_keys_to_add:
      - https://deb.nodesource.com/gpgkey/nodesource.gpg.key
      - https://dl.yarnpkg.com/debian/pubkey.gpg
    apt_repo_to_add:
      - "deb https://deb.nodesource.com/node_10.x {{ ansible_distribution_release }} main"
      - "deb https://dl.yarnpkg.com/debian/ stable main"
    # XXX npm is included in nodejs from deb.nodesource.com
    nodejs_npm_package: "{% if ansible_os_family == 'Debian' %}nodejs{% else %}npm{% endif %}"

    # ________________________________________nginx
    os_www_root_dir:
      FreeBSD: /usr/local/www/nginx
      OpenBSD: /var/www/htdocs
      Debian: /var/www/html
      RedHat: /usr/share/nginx/html
    nginx_config: |
      user {{ nginx_user }};
      {% if ansible_os_family == 'Debian' or ansible_os_family == 'RedHat' %}
      pid /run/nginx.pid;
      {% endif %}
      worker_processes 1;
      error_log {{ nginx_error_log_file }};
      events {
        worker_connections 1024;
      }
      http {
        upstream backend {
          server {{ laserweb_host }}:{{ laserweb_port }};
          keepalive 60;
        }
        include {{ nginx_conf_dir }}/mime.types;
        default_type application/octet-stream;
        sendfile on;
        gzip on;
        keepalive_timeout 60;
        access_log {{ nginx_access_log_file }} combined;

        # WebSocket mapping
        map $http_upgrade $connection_upgrade {
          default upgrade;
          '' close;
        }
        server {
          listen 80;
          server_name localhost;
          location / {
            proxy_pass http://backend;

            # disable buffering of responses from the proxied server to keep
            # synchronous interaction with kibana
            proxy_buffering off;

            # regular reverse proxy headers
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;

            # WebSocket proxying
            # http://nginx.org/en/docs/http/websocket.html
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_cache_bypass $http_upgrade;
          }
        }
      }
